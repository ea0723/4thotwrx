{"filter":false,"title":"conversions_controller.rb","tooltip":"/app/controllers/conversions_controller.rb","undoManager":{"mark":36,"position":36,"stack":[[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":0,"column":0},"end":{"row":19,"column":0}},"nl":"\n","lines":["class ConversionsController < ApplicationController","  def home","  end","  ","  def new","    @conversion = Conversion.new","  end","  ","  def create","    @conversion = Conversion.new(conversion_params)","  end","  ","  ","  def conversion_params","      # binding.pry ","      params.require(:conversion[:convert_me]).permit(:convert_me, :credits)","  end","","end"]}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":70}},"text":"before_action :set_conversion, only: [:show, :edit, :update, :destroy]"},{"action":"insertText","range":{"start":{"row":0,"column":70},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":77,"column":0}},"lines":["","  # GET /conversion2s","  # GET /conversion2s.json","  def index","    @conversions2 = Conversion2.all","  end","","","  # GET /conversion2s/1","  # GET /conversion2s/1.json","  def show","  end","","  # GET /conversion2s/new","  def new","    @conversion2 = Conversion2.new","  end","","  # GET /conversion2s/1/edit","  def edit","    @conversion2 = Conversion2.find(set_conversion)","  end","","  # POST /conversion2s","  # POST /conversion2s.json","  def create","    @conversion2 = Conversion2.new(conversion_params)","","    respond_to do |format|","      if @conversion2.save","        format.html { redirect_to @conversion2, notice: \"Conversion Successful\" }","        format.json { render :show, status: :created, location: @conversion2 }","      else","        format.html { render :new }","        format.json { render json: @conversion2.errors, status: :unprocessable_entity }","      end","    end","","  end","","  # PATCH/PUT /conversion2s/1","  # PATCH/PUT /conversion2s/1.json","  def update","    respond_to do |format|","      if @conversion2.update(conversion_params)","        format.html { redirect_to @conversion2, notice: 'Conversion was successfully updated.' }","        format.json { render :show, status: :ok, location: @conversion2 }","      else","        format.html { render :edit }","        format.json { render json: @conversion2.errors, status: :unprocessable_entity }","      end","    end","","  end","","  # DELETE /conversion2s/1","  # DELETE /conversion2s/1.json","  def destroy","    @conversion2.destroy","    respond_to do |format|","      format.html { redirect_to conversions_url, notice: 'Conversion was successfully removed.' }","      format.json { head :no_content }","    end","  end","","","  private","  # Use callbacks to share common setup or constraints between actions.","  def set_conversion","    @conversion2 = Conversion2.find(params[:id])","  end","","  # Never trust parameters from the scary internet, only allow the white list through.","  def conversion_params","    params.require(:conversion2).permit(:convert_me, :credits)","  end"]}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":1,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":52}},"text":"class Conversion2sController < ApplicationController"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":0,"column":16},"end":{"row":0,"column":17}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":3,"column":19},"end":{"row":3,"column":20}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":4,"column":19},"end":{"row":4,"column":20}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":6,"column":16},"end":{"row":6,"column":17}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":6,"column":29},"end":{"row":6,"column":30}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":10,"column":19},"end":{"row":10,"column":20}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":11,"column":19},"end":{"row":11,"column":20}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":15,"column":19},"end":{"row":15,"column":20}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":17,"column":15},"end":{"row":17,"column":16}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":17,"column":28},"end":{"row":17,"column":29}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":22,"column":15},"end":{"row":22,"column":16}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":22,"column":28},"end":{"row":22,"column":29}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":25,"column":20},"end":{"row":25,"column":21}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":26,"column":20},"end":{"row":26,"column":21}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":28,"column":15},"end":{"row":28,"column":16}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":28,"column":28},"end":{"row":28,"column":29}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":31,"column":20},"end":{"row":31,"column":21}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":32,"column":45},"end":{"row":32,"column":46}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":33,"column":75},"end":{"row":33,"column":76}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":36,"column":46},"end":{"row":36,"column":47}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":42,"column":25},"end":{"row":42,"column":26}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":43,"column":25},"end":{"row":43,"column":26}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":46,"column":20},"end":{"row":46,"column":21}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":47,"column":45},"end":{"row":47,"column":46}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":48,"column":70},"end":{"row":48,"column":71}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":57,"column":12},"end":{"row":57,"column":23}},"text":"conversion2"},{"action":"insertText","range":{"start":{"row":57,"column":12},"end":{"row":57,"column":22}},"text":"conversion"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":58,"column":12},"end":{"row":58,"column":23}},"text":"conversion2"},{"action":"insertText","range":{"start":{"row":58,"column":12},"end":{"row":58,"column":22}},"text":"conversion"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":60,"column":5},"end":{"row":60,"column":16}},"text":"conversion2"},{"action":"insertText","range":{"start":{"row":60,"column":5},"end":{"row":60,"column":15}},"text":"conversion"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":71,"column":15},"end":{"row":71,"column":16}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":71,"column":28},"end":{"row":71,"column":29}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":76,"column":30},"end":{"row":76,"column":31}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":0,"column":0},"end":{"row":78,"column":0}},"nl":"\n","lines":["class ConversionsController < ApplicationController","before_action :set_conversion, only: [:show, :edit, :update, :destroy]","","  # GET /conversions","  # GET /conversions.json","  def index","    @conversions = Conversion.all","  end","","","  # GET /conversions/1","  # GET /conversions/1.json","  def show","  end","","  # GET /conversions/new","  def new","    @conversion = Conversion.new","  end","","  # GET /conversion2s/1/edit","  def edit","    @conversion = Conversion.find(set_conversion)","  end","","  # POST /conversions","  # POST /conversions.json","  def create","    @conversion = Conversion.new(conversion_params)","","    respond_to do |format|","      if @conversion.save","        format.html { redirect_to @conversion, notice: \"Conversion Successful\" }","        format.json { render :show, status: :created, location: @conversion }","      else","        format.html { render :new }","        format.json { render json: @conversion.errors, status: :unprocessable_entity }","      end","    end","","  end","","  # PATCH/PUT /conversions/1","  # PATCH/PUT /conversions/1.json","  def update","    respond_to do |format|","      if @conversion.update(conversion_params)","        format.html { redirect_to @conversion, notice: 'Conversion was successfully updated.' }","        format.json { render :show, status: :ok, location: @conversion }","      else","        format.html { render :edit }","        format.json { render json: @conversion2.errors, status: :unprocessable_entity }","      end","    end","","  end","","  # DELETE /conversions/1","  # DELETE /conversions/1.json","  def destroy","    @conversion.destroy","    respond_to do |format|","      format.html { redirect_to conversions_url, notice: 'Conversion was successfully removed.' }","      format.json { head :no_content }","    end","  end","","","  private","  # Use callbacks to share common setup or constraints between actions.","  def set_conversion","    @conversion = Conversion.find(params[:id])","  end","","  # Never trust parameters from the scary internet, only allow the white list through.","  def conversion_params","    params.require(:conversion).permit(:convert_me, :credits)","  end"]},{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":51}},"text":"class ConversionsController < ApplicationController"},{"action":"insertText","range":{"start":{"row":0,"column":51},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":79,"column":0}},"lines":["  before_action :set_conversion, only: [:show, :edit, :update, :destroy]","","  # GET /conversions","  # GET /conversions.json","  def index","    @conversions2 = Conversion.all","  end","","","  # GET /conversions/1","  # GET /conversions/1.json","  def show","  end","","  # GET /conversions/new","  def new","    @conversion = Conversion.new","  end","","  # GET /conversions/1/edit","  def edit","    @conversion = Conversion.find(set_conversion)","  end","","  # POST /conversions","  # POST /conversions.json","  def create","    @conversion = Conversion.new(conversion_params)","","    respond_to do |format|","      if @conversion.save","        format.html { redirect_to @conversion, notice: \"Conversion Successful\" }","        format.json { render :show, status: :created, location: @conversion }","      else","        format.html { render :new }","        format.json { render json: @conversion.errors, status: :unprocessable_entity }","      end","    end","","  end","","  # PATCH/PUT /conversions/1","  # PATCH/PUT /conversions/1.json","  def update","    respond_to do |format|","      if @conversion.update(conversion_params)","        format.html { redirect_to @conversion, notice: 'Conversion was successfully updated.' }","        format.json { render :show, status: :ok, location: @conversion }","      else","        format.html { render :edit }","        format.json { render json: @conversion.errors, status: :unprocessable_entity }","      end","    end","","  end","","  # DELETE /conversions/1","  # DELETE /conversions/1.json","  def destroy","    @conversion.destroy","    respond_to do |format|","      format.html { redirect_to conversions_url, notice: 'Conversion was successfully removed.' }","      format.json { head :no_content }","    end","  end","","","  private","  # Use callbacks to share common setup or constraints between actions.","  def set_conversion","    @conversion = Conversion.find(params[:id])","  end","","  # Never trust parameters from the scary internet, only allow the white list through.","  def conversion_params","    params.require(:conversion).permit(:convert_me, :credits)","  end","end"]}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":6,"column":16},"end":{"row":6,"column":17}},"text":"2"}]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":6,"column":16},"end":{"row":6,"column":16},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1415633916043,"hash":"a7e4f49e529a3365b389fd39d6374b0f6cb935d0"}